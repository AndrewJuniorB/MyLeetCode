import UIKit
import Foundation

 public class TreeNode {
     public var val: Int
     public var left: TreeNode?
     public var right: TreeNode?
     public init() { self.val = 0; self.left = nil; self.right = nil; }
     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }
     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {
         self.val = val
         self.left = left
         self.right = right
     }
 }

class Solution {
    func rangeSumBST(_ root: TreeNode?, _ L: Int, _ R: Int) -> Int {
        
        var result = 0
        guard let myroot = root else { return result}
        
        if L <= myroot.val &&  myroot.val <= R {
            result += myroot.val
        }
        if L < myroot.val {
            result += rangeSumBST(myroot.left, L, R)
        }
        if myroot.val < R {
            result += rangeSumBST(myroot.right, L, R)
        }

        return result
        }
}


let node1 = TreeNode(10)
let node2 = TreeNode(5)
let node3 = TreeNode(15)
let node4 = TreeNode(3)
let node5 = TreeNode(7)
let node6 = TreeNode(13)
let node7 = TreeNode(18)
let node8 = TreeNode(1)
let node9 = TreeNode(6)



node1.left = node2
node1.right = node3
node2.left = node4
node2.right = node5
node3.left = node6
node3.right = node7
node4.left = node8
node5.left = node9






let mySolution = Solution()
mySolution.rangeSumBST(node1, 6, 10)
